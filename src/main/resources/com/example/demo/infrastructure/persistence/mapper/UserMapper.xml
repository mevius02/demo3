<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.infrastructure.persistence.mapper.UserMapper">

	<select id="selectLoginUser" parameterType="com.example.demo.domain.form.login.LoginForm"
		resultType="com.example.demo.domain.model.UserData"> SELECT muser.user_id, muser.user_nm ,
		to_char(muser.account_expiration, 'YYYY/MM/DD') as account_expiration,
		to_char(muser.password_expiration, 'YYYY/MM/DD') as password_expiration, muser.enabled ,
		muser.insert_user_id, to_char(muser.insert_timestamp, 'YYYY/MM/DD HH24:MI:SS') as
		insert_timestamp, muser.update_user_id, to_char(muser.update_timestamp, 'YYYY/MM/DD
		HH24:MI:SS') as update_timestamp FROM m_user muser <where> muser.user_id = #{email} AND
		muser.password = #{password} </where></select>

	<select id="selectUserList" parameterType="com.example.demo.domain.form.user.SearchForm"
		resultType="com.example.demo.domain.model.UserData"> SELECT muser.user_id, muser.user_nm ,
		to_char(muser.account_expiration, 'YYYY/MM/DD') as account_expiration,
		to_char(muser.password_expiration, 'YYYY/MM/DD') as password_expiration, muser.enabled ,
		muser.insert_user_id, to_char(muser.insert_timestamp, 'YYYY/MM/DD HH24:MI:SS') as
		insert_timestamp, muser.update_user_id, to_char(muser.update_timestamp, 'YYYY/MM/DD
		HH24:MI:SS') as update_timestamp FROM m_user muser <where>
			<if test="userId != null and userId != ''"> AND muser.user_id LIKE CONCAT('%',
		#{userId}, '%') </if>
		<if test="userNm != null and userNm != ''"> AND muser.user_nm LIKE
		CONCAT('%', #{userNm}, '%') </if>
		</where> ORDER BY muser.user_id </select>

	<insert id="insertUser" parameterType="com.example.demo.domain.model.UserData"> INSERT INTO
		m_user (update_cnt, user_id, password, user_nm, account_expiration, password_expiration ,
		enabled, insert_user_id, insert_timestamp, update_user_id, update_timestamp) VALUES (
		#{updateCnt, jdbcType=INTEGER}, #{userId, jdbcType=VARCHAR}, #{password, jdbcType=VARCHAR},
		#{userNm, jdbcType=VARCHAR}, CAST(#{accountExpiration, jdbcType=VARCHAR} AS DATE),
		CAST(#{passwordExpiration, jdbcType=VARCHAR} AS DATE), #{enabled, jdbcType=BOOLEAN},
		#{insertUserId, jdbcType=VARCHAR}, CAST(#{insertTimestamp, jdbcType=VARCHAR} AS TIMESTAMP),
		#{updateUserId, jdbcType=VARCHAR}, CAST(#{updateTimestamp, jdbcType=VARCHAR} AS TIMESTAMP) )</insert>

</mapper>