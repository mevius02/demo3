■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
■ パッケージ構成図解説(3層アーキテクチャ)
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
各層ごとにパッケージを分けることで、アプリケーションの機能を明確化し、保守性を高めることができます

●application: アプリケーション層
この層では、コントローラーやサービスクラスなど、アプリケーションの振る舞いを定義します
controllerパッケージにはWebAPIのエンドポイントを実装し、requestパッケージとresponseパッケージには、リクエストとレスポンスのデータ構造を定義します

●domain: ドメイン層
この層では、アプリケーションのビジネスルールやエンティティ、バリューオブジェクトなどを定義します
modelパッケージにはドメインオブジェクトを定義し、repositoryパッケージには永続化のためのリポジトリを定義します
また、serviceパッケージにはドメインロジックを実装します

●infrastructure: インフラストラクチャ層
この層では、データベースや外部APIなどの外部インタフェースを扱います
persistenceパッケージには、エンティティとリポジトリのマッピングやクエリを定義します
externalパッケージには、外部APIとの通信を担当するクライアントを実装します
configurationパッケージには、アプリケーション全体の設定を定義します
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
■
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
